---
title: "Generative Art"
author: "Thomas Reinke"
format: html
theme: flatly
code-fold: true
---

```{r}
#| echo: false
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(RColorBrewer)
knitr::opts_chunk$set(warning = FALSE, results = "hide")
theme_void2 <- \() {
  theme_void() %+replace% theme(
    plot.background = element_rect(fill = "black", color = NA),
    legend.background = element_rect(fill = "black", color = NA),
    panel.background = element_rect(fill = "black", color = NA),
    strip.background = element_rect(fill = "black", color = NA)
  )
}
theme_set(theme_void2())
library(aRt)
#library(ggsci)
```

# First go at this

Inspiration from [Nicola Rennie](https://nrennie.rbind.io/)

1. Parameters
    i) Number of lines
    ii) Number of circles per line
    iii) Background color & color of circles

2. Randomness
    i) Position of circles
    ii) Size of circles

3. Rules
    i) series of horizontal lines
    ii) one each line, circles of varying sizes

```{r}
draw <- \(
  n_lines = 25,
  n_dots = 100,
  max_size = 2,
  main_col = "#326273",
  bg_col = "#BDD8DE",
  seed = 1234
) {
  set.seed(seed)
  df <- tibble(
    x = runif(n_lines * n_dots, 0, 10),
    y = rep(1:n_lines, n_dots),
    size = rexp(n_lines * n_dots)
  )
  
  df |>
    ggplot(aes(x = x, y = y)) +
    geom_line(
      aes(group = y),
      alpha = .1,
      color = main_col,
      linewidth = .3
    ) +
    geom_point(
      aes(size = size),
      pch = 21,
      fill = main_col,
      color = main_col,
      alpha = .3
    ) +
    theme(
      plot.background = element_rect(fill = bg_col, color = bg_col),
      legend.position = "none",
      plot.margin = unit(c(0, 0, 0, 0), "cm")
    )
}

draw()
```

## [aRt package](https://github.com/nrennie/aRt)

```{r}
aRt::crawling()
aRt::crosshatch()
aRt::fading()
aRt::gradients()
aRt::heart()
aRt::moire()
aRt::network()
aRt::riso_circles()
aRt::split_grid()
aRt::vortex()
```

### Network

```{r}
aRt::network()
```

### Riso Circles

```{r}
#| fig-asp: 1
#aRt::riso_circles()

circles2 <- \(seed = 1, nrows = 3, ncols = 3) {
  set.seed(seed)
  expand.grid(x = 1, y = 1) |>
    tibble(id = 1:(ncols * nrows)) |>
    mutate(row = rep(1:3, each = 3), col = rep(1:3, 3)) |>
    rowwise() |>
    mutate(
      x_s = x + runif(1, min = -.5, max = .5),
      y_s = y + runif(1, min = -.5, max = .5)
    ) |>
    pivot_longer(cols = c(x, x_s),
                 names_to = "xgrp",
                 values_to = "x") |>
    pivot_longer(cols = c(y, y_s),
                 names_to = "ygrp",
                 values_to = "y") |>
    dplyr::filter((xgrp == "x" &
                     ygrp == "y") | (xgrp == "x_s" & ygrp == "y_s")) |>
    mutate(color = sample(
      c("#6497b1", "#6a359c", "#FFB04F", "#679c35", "#cd1076"),
      18,
      replace = TRUE
    )) |>
    ggplot(aes(
      x = x,
      y = y,
      color = factor(color)
    )) +
    geom_point(size = 35,
               show.legend = FALSE,
               alpha = .5) +
    facet_grid(rows = vars(row),
               cols = vars(col),
               margins = FALSE) +
    lims(x = c(-.5, 2.5), y = c(-.5, 2.5)) +
    theme(strip.text = element_blank())
}

circles2(7)

```

### Split Grid

```{r}
aRt::split_grid()

# ncols = 1
# nrows = 1
# 
# expand.grid(
#   lx = 0,
#   by = 0,
#   rx = 1,
#   uy = 1,
#   col = 1:ncols,
#   row = 1:nrows,
#   side = c("b", "t", "l", "r")
# ) |>
#   rowwise()|>
#   mutate(
#     holex = runif(1),
#     holey = runif(1)
#   ) |> 
#   pivot_longer(
#     cols = c(lx, rx, holex),
#     names_to = "grpx",
#     values_to = "x"
#   ) |>
#   pivot_longer(
#     cols = c(by, uy, holey),
#     names_to = "grpy",
#     values_to = "y"
#   )|>
#   dplyr::filter((side == "b") & (y < 1))
#   ggplot() + 
#   geom_polygon(aes(x = x, y = y, group = side), color = "red") + 
#   facet_grid(rows = vars(row), cols = vars(col)) + 
#   theme_minimal()
```

```{r profile-pic}
#| warning: false
#| fig-asp: 1
n = 1001

expand.grid(x = seq(-1, 1, length.out = n),
            y = seq(-1, 1, length.out = n)) |>
  tibble(fill = rbeta(n^2, abs(x), abs(y))) |>
  replace_na(list(fill = 0)) |>
  ggplot() +
  geom_raster(aes(x = x, y = y, fill = factor(fill)), show.legend = FALSE, interpolate = FALSE) +
  scale_fill_viridis_d(option = "turbo") + 
  theme_void()

```